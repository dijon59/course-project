{"ast":null,"code":"var _jsxFileName = \"/Users/dijonmboko/Desktop/React-course/my-first-app/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person'; // import Radium, { StyleRoot } from \"radium\";\n\nimport styled from 'styled-components';\nconst StyledButton = styled.but`\n    background-color: green,\n    font: inherit,\n    border: 1px solid blue,\n    padding: 8px,\n    cursor: pointer,\n\n    &:hover: {\n        background-color: salmon,\n        color: black\n    }\n`;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      persons: [{\n        id: 'asfa1',\n        name: 'Max',\n        age: 28\n      }, {\n        id: 'vassf1',\n        name: 'Manu',\n        age: 29\n      }, {\n        id: 'asdf1',\n        name: 'Stephanie',\n        age: 26\n      }],\n      otherState: 'Some other value',\n      showPersons: false\n    };\n\n    this.nameChangedHandler = (event, id) => {\n      const personIndex = this.state.persons.findIndex(p => {\n        return p.id === id;\n      });\n      console.log(personIndex);\n      const person = { ...this.state.persons[personIndex]\n      };\n      console.log(person);\n      person.name = event.target.value;\n      const persons = [...this.state.persons];\n      persons[personIndex] = person;\n      this.setState({\n        persons: persons\n      });\n    };\n\n    this.togglePersonsHandler = () => {\n      const doesShow = this.state.showPersons;\n      this.setState({\n        showPersons: !doesShow\n      });\n    };\n\n    this.deletePersonHandler = personIndex => {\n      // const persons = this.state.persons.slice();\n      // spread operator\n      const persons = [...this.state.persons];\n      console.log(personIndex);\n      persons.splice(personIndex, 1);\n      this.setState({\n        persons: persons\n      });\n    };\n  }\n\n  render() {\n    const style = {\n      backgroundColor: 'green',\n      font: 'inherit',\n      border: '1px solid blue',\n      padding: '8px',\n      cursor: 'pointer',\n      ':hover': {\n        backgroundColor: 'salmon',\n        color: 'black'\n      }\n    };\n    let persons = null;\n\n    if (this.state.showPersons) {\n      persons = /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 17\n        }\n      }, this.state.persons.map((person, index) => {\n        return /*#__PURE__*/React.createElement(Person, {\n          key: person.id,\n          click: () => this.deletePersonHandler(index),\n          name: person.name,\n          age: person.age,\n          changed: event => this.nameChangedHandler(event, person.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 32\n          }\n        });\n      }));\n      style.backgroundColor = 'red';\n      style[':hover'] = {\n        backgroundColor: 'salmon',\n        color: 'black'\n      };\n    }\n\n    const classes = [];\n\n    if (this.state.persons.length <= 2) {\n      classes.push('red'); // classes = ['red']\n    }\n\n    if (this.state.persons.length <= 1) {\n      classes.push('bold'); // classes = ['red', 'bold']\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }, \"Hi, Hello world\"), /*#__PURE__*/React.createElement(\"p\", {\n      className: classes.join(' '),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"This is really working\"), /*#__PURE__*/React.createElement(StyledButton, {\n      onClick: this.togglePersonsHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, \"Switch Name\"), persons);\n  }\n\n}\n\nexport default App; // hooks\n// const App = props => {\n//     // Array distructuring\n//     const [personState, setPersonState] = useState({\n//     persons: [\n//       {name: 'Max', age: 28},\n//       {name: 'Manu', age: 29},\n//       {name: 'Stephanie', age: 26}\n//     ],\n//     otherState: 'some other value'\n//   });\n//\n//     const [otherState, setOtherState] = useState('some other value');\n//     console.log(personState, otherState);\n//     const switchNameHandler = () => {\n//         setPersonState({\n//           persons: [\n//               {name: 'Dijon', age: 24},\n//               {name: 'Manu', age: 29},\n//               {name: 'Stephanie', age: 26}\n//           ]\n//       })\n//     };\n//       // jsx not html\n//     return (\n//         <div className='App'>\n//         <h1>Hi, Hello world</h1>\n//         <button onClick={switchNameHandler}>Switch Name</button>\n//         <Person name={personState.persons[0].name} age={personState.persons[0].age}> My person </Person>\n//         <Person name={personState.persons[1].name} age={personState.persons[1].age}></Person>\n//         <Person name={personState.persons[2].name} age={personState.persons[2].age}></Person>\n//         </div>\n//     )\n// };","map":{"version":3,"sources":["/Users/dijonmboko/Desktop/React-course/my-first-app/src/App.js"],"names":["React","Component","Person","styled","StyledButton","but","App","state","persons","id","name","age","otherState","showPersons","nameChangedHandler","event","personIndex","findIndex","p","console","log","person","target","value","setState","togglePersonsHandler","doesShow","deletePersonHandler","splice","render","style","backgroundColor","font","border","padding","cursor","color","map","index","classes","length","push","join"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport Person from './Person/Person';\n// import Radium, { StyleRoot } from \"radium\";\nimport styled from 'styled-components'\n\nconst StyledButton = styled.but`\n    background-color: green,\n    font: inherit,\n    border: 1px solid blue,\n    padding: 8px,\n    cursor: pointer,\n\n    &:hover: {\n        background-color: salmon,\n        color: black\n    }\n`;\n\nclass App extends Component {\n    state = {\n        persons: [\n            { id: 'asfa1', name: 'Max', age: 28},\n            { id: 'vassf1', name: 'Manu', age: 29},\n            { id: 'asdf1', name: 'Stephanie', age: 26}\n        ],\n        otherState: 'Some other value',\n        showPersons: false,\n    };\n\n\n//     switchNameHandler = (newName) => {\n//         // console.log('was clicked');\n//         // DON'T DO THIS: this.state.persons[0].name = 'dijon';\n//         this.setState({persons: [\n//             { name: newName, age: 28},\n//             { name: 'Manu', age: 29},\n//             { name: 'Stephanie', age: 27}\n//         ]})\n//     };\n    nameChangedHandler = (event, id) => {\n        const personIndex = this.state.persons.findIndex(p => {\n            return p.id === id\n        });\n        console.log(personIndex);\n        const person = {\n            ...this.state.persons[personIndex]\n        };\n        console.log(person);\n        person.name = event.target.value;\n        const persons = [...this.state.persons];\n        persons[personIndex] = person;\n        this.setState({persons: persons})\n    };\n\n\n    togglePersonsHandler = () => {\n        const doesShow = this.state.showPersons;\n        this.setState({showPersons: !doesShow})\n\n\n    };\n    deletePersonHandler = (personIndex) => {\n        // const persons = this.state.persons.slice();\n        // spread operator\n        const persons = [...this.state.persons];\n        console.log(personIndex);\n        persons.splice(personIndex, 1);\n        this.setState({persons: persons})\n    };\n\n\n    render() {\n        const style = {\n            backgroundColor: 'green',\n            font: 'inherit',\n            border: '1px solid blue',\n            padding: '8px',\n            cursor: 'pointer',\n            ':hover': {\n                backgroundColor: 'salmon',\n                color: 'black'\n            }\n        };\n        let persons = null;\n\n\n        if (this.state.showPersons) {\n            persons = (\n                <div>\n                    {this.state.persons.map((person, index) => {\n                        return <Person\n                            key={person.id}\n                            click={() => this.deletePersonHandler(index)}\n                            name={person.name}\n                            age={person.age}\n                            changed={(event) => this.nameChangedHandler(event, person.id)}/>\n                    })}\n                </div>\n            )\n            style.backgroundColor = 'red';\n            style[':hover'] = {\n                backgroundColor: 'salmon',\n                color: 'black'\n            }\n        }\n        const classes = [];\n        if (this.state.persons.length <= 2) {\n            classes.push('red'); // classes = ['red']\n        }\n        if (this.state.persons.length <= 1 ) {\n            classes.push('bold') // classes = ['red', 'bold']\n        }\n        return (\n            <div className='App'>\n                <h1>Hi, Hello world</h1>\n                <p className={classes.join(' ')}>This is really working</p>\n                <StyledButton\n                    onClick={this.togglePersonsHandler}>Switch Name\n                </StyledButton>\n                {persons}\n            </div>\n        );\n    }\n}\n\n\nexport default App;\n\n\n\n\n// hooks\n// const App = props => {\n//     // Array distructuring\n//     const [personState, setPersonState] = useState({\n//     persons: [\n//       {name: 'Max', age: 28},\n//       {name: 'Manu', age: 29},\n//       {name: 'Stephanie', age: 26}\n//     ],\n//     otherState: 'some other value'\n//   });\n//\n//     const [otherState, setOtherState] = useState('some other value');\n//     console.log(personState, otherState);\n//     const switchNameHandler = () => {\n//         setPersonState({\n//           persons: [\n//               {name: 'Dijon', age: 24},\n//               {name: 'Manu', age: 29},\n//               {name: 'Stephanie', age: 26}\n//           ]\n//       })\n//     };\n//       // jsx not html\n//     return (\n//         <div className='App'>\n//         <h1>Hi, Hello world</h1>\n//         <button onClick={switchNameHandler}>Switch Name</button>\n//         <Person name={personState.persons[0].name} age={personState.persons[0].age}> My person </Person>\n//         <Person name={personState.persons[1].name} age={personState.persons[1].age}></Person>\n//         <Person name={personState.persons[2].name} age={personState.persons[2].age}></Person>\n//         </div>\n//     )\n// };\n\n"]},"metadata":{},"sourceType":"module"}